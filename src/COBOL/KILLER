       IDENTIFICATION DIVISION.
       PROGRAM-ID. KILLER.
    
       DATA DIVISION.
       WORKING-STORAGE SECTION.
        01  RULES.
           05  RULE OCCURS 50   INDEXED BY WS-RULE-X.
               10  RULE-TOTAL      PIC 99.
               10  RULE-CELL       PIC 99    OCCURS 10
                                             INDEXED BY X.

       01  EXAMPLE-GAME.
           05  FILLER   PIC X(22)  VALUE "0701020000000000000000".
           05  FILLER   PIC X(22)  VALUE "2703101112000000000000".
           05  FILLER   PIC X(22)  VALUE "0704050000000000000000".
           05  FILLER   PIC X(22)  VALUE "1706070816000000000000".
           05  FILLER   PIC X(22)  VALUE "1609180000000000000000".
           05  FILLER   PIC X(22)  VALUE "0813141500000000000000".
           05  FILLER   PIC X(22)  VALUE "1417262700000000000000".
           05  FILLER   PIC X(22)  VALUE "1019202900000000000000".
           05  FILLER   PIC X(22)  VALUE "1321220000000000000000".
           05  FILLER   PIC X(22)  VALUE "1923243300000000000000".
           05  FILLER   PIC X(22)  VALUE "1925344300000000000000".
           05  FILLER   PIC X(22)  VALUE "1628370000000000000000".
           05  FILLER   PIC X(22)  VALUE "0330390000000000000000".
           05  FILLER   PIC X(22)  VALUE "1231320000000000000000".
           05  FILLER   PIC X(22)  VALUE "0935360000000000000000".
           05  FILLER   PIC X(22)  VALUE "0838470000000000000000".
           05  FILLER   PIC X(22)  VALUE "1240490000000000000000".
           05  FILLER   PIC X(22)  VALUE "0541500000000000000000".
           05  FILLER   PIC X(22)  VALUE "1442510000000000000000".
           05  FILLER   PIC X(22)  VALUE "0644455400000000000000".
           05  FILLER   PIC X(22)  VALUE "1746556473000000000000".
           05  FILLER   PIC X(22)  VALUE "0748570000000000000000".
           05  FILLER   PIC X(22)  VALUE "1652530000000000000000".
           05  FILLER   PIC X(22)  VALUE "1656656600000000000000".
           05  FILLER   PIC X(22)  VALUE "1758670000000000000000".
           05  FILLER   PIC X(22)  VALUE "1859606800000000000000".
           05  FILLER   PIC X(22)  VALUE "0761707100000000000000".
           05  FILLER   PIC X(22)  VALUE "2362637200000000000000".
           05  FILLER   PIC X(22)  VALUE "0769780000000000000000".
           05  FILLER   PIC X(22)  VALUE "1774750000000000000000".
           05  FILLER   PIC X(22)  VALUE "0376770000000000000000".
           05  FILLER   PIC X(22)  VALUE "1579808100000000000000".

       01  BOARD.
           05  CELL                   PIC 9       OCCURS 81.
  
       01  I                          PIC S9(4) COMP.
       01  J                          PIC S9(4) COMP.
       01  M                          PIC 9.
       01  WS-SUM                     PIC S9(4) COMP.

       01  T1                          PIC S9(4) COMP.
       01  T2                          PIC S9(4) COMP.
       01  T3                          PIC S9(4) COMP.
       01  T4                          PIC S9(4) COMP.
       01  T5                          PIC S9(4) COMP.
       01  T6                          PIC S9(4) COMP.                 


       01  BOARD-FLAG                 PIC X.
           88  BOARD-VALID                        VALUE 'Y'.
           88  BOARD-INVALID                      VALUE 'N'.
       01  FILLER                     PIC X.
           88  M-IS-VALID                         VALUE 'Y'.
           88  M-IS-INVALID                       VALUE 'N'.

      * 01  LS-X                       PIC S9(4) COMP.
       01  LS-STACK OCCURS 10000 INDEXED BY LS-X.
           05  LS-BOARD               PIC X(81).
           05  LS-I                   PIC S9(4) COMP.
           05  LS-M                   PIC 9.

      
       LOCAL-STORAGE SECTION.
      * 01  LS-BOARD                   PIC X(81).
      * 01  LS-I                       PIC S9(4) COMP.
      * 01  LS-M                       PIC 9.
      
       PROCEDURE DIVISION.

           DISPLAY "STARTED...".
           MOVE ZEROES           TO BOARD
           SET LS-X              TO 1.
           MOVE EXAMPLE-GAME     TO RULES.

      *     ENTRY "RECURSIVECHECK".
       RECURSIVECHECK.

      *     DISPLAY I ' ' M ' ' LS-X ' 'BOARD.
      
      * Finds the first non-zero cell then try the values 1, 2, 3...
      * If the attempt satisfies the rules the recurse to solve this
      * new position"
           PERFORM VARYING I FROM 1 BY 1
                   UNTIL I > 81 OR CELL(I) = 0
           END-PERFORM.

           IF I > 81
              DISPLAY BOARD
              STOP RUN.

           MOVE 1 TO M.

       TRY-M. 

           IF LS-X = 10000
              DISPLAY 'STACK FULL'
              STOP RUN
           END-IF.   

           MOVE BOARD    TO LS-BOARD(LS-X).
           MOVE I        TO LS-I(LS-X).
           MOVE M        TO BOARD(I:1)
                            LS-M(LS-X).
           SET LS-X UP BY 1.
              
           PERFORM CHECK-BOARD.
           
           IF BOARD-VALID
              GO RECURSIVECHECK
           END-IF.   
           
           SET LS-X DOWN BY 1.
           MOVE LS-BOARD(LS-X) TO BOARD.
           MOVE LS-I(LS-X)     TO I.
           MOVE LS-M(LS-X)     TO M.

       NEXT-M.
           ADD 1 TO M.
           IF NOT M = 0
              GO TRY-M.

           SET LS-X DOWN BY 1.
           MOVE LS-BOARD(LS-X) TO BOARD.
           MOVE LS-I(LS-X)     TO I.
           MOVE LS-M(LS-X)     TO M.
              
           GO NEXT-M.


           GOBACK. 

       CHECK-BOARD SECTION.
           SET BOARD-INVALID TO TRUE.

           PERFORM CHECK-ALL-RULES.
      
           IF BOARD-INVALID 
              GO CHECK-BOARD-EXIT.

           SET M-IS-VALID TO TRUE
           PERFORM VARYING J FROM 1 BY 1
                   UNTIL J > 81
                   OR M-IS-INVALID

              IF I NOT = J
                 
                 COMPUTE T1 = (I - 1) / 9
                 COMPUTE T2 = (J - 1) / 9
                 COMPUTE T3 = (I - 1) / 27
                 COMPUTE T4 = (J - 1) / 27
                 COMPUTE T5 = FUNCTION REM(I - 1, 9) / 3
                 COMPUTE T6 = FUNCTION REM(j - 1, 9) / 3

                 IF T1 = T2
                 OR (FUNCTION REM(I - J, 9) = 0)
                 OR ((T3 = T4) AND (T5 = T6))
                    IF M = CELL(J)
                       SET BOARD-INVALID TO TRUE
                       GO CHECK-BOARD-EXIT
                    END-IF   
                 END-IF   
              END-IF
           END-PERFORM.

       CHECK-BOARD-EXIT.
           EXIT.
       
       CHECK-ALL-RULES SECTION.
      * Check all the rules against the given board. A rule is an array
      * where the first item is the required total and the remaining
      * items are the cell positions that must be summed"
           PERFORM VARYING WS-RULE-X FROM 1 BY 1
                   UNTIL RULE(WS-RULE-X) = SPACES
           
              MOVE ZERO TO WS-SUM

              PERFORM VARYING X FROM 1 BY 1
                      UNTIL X = 10
                      OR RULE-CELL(WS-RULE-X X) = 0

                 IF CELL(RULE-CELL(WS-RULE-X X)) = 0
                    MOVE -1 TO WS-SUM         
                    SET X TO 9
                 ELSE 
                    ADD CELL(RULE-CELL(WS-RULE-X X)) TO WS-SUM
                 END-IF

              END-PERFORM

              IF WS-SUM > 0
                 IF WS-SUM NOT = RULE-TOTAL(WS-RULE-X)
                    GO CHECK-ALL-RULES-EXIT
                 END-IF   
              END-IF
                        
           END-PERFORM.

           SET BOARD-VALID TO TRUE.


       CHECK-ALL-RULES-EXIT.
           EXIT.
